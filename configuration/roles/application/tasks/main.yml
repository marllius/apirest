---
# yamllint disable rule:line-length
# yamllint disable rule:comments-indentation

# pip install
- import_tasks: pip.yml

- name: Add python Repository
  apt_repository:
    repo: "ppa:deadsnakes/ppa"
    state: present

- name: Install aptitude using apt
  apt: 
    name: aptitude
    state: latest
    update_cache: yes 
    force_apt_get: yes

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Install required system packages
  become: true
  become_user: root
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3.9','python3-pip', 'virtualenv', 'python3-setuptools', 'git', 'wget', 'docker-ce', 'docker-compose', 'net-tools']
  
- name: Install Docker Module for Python
  pip:
    name: docker
    executable: pip3

- name: Install setuptools
  become: true
  become_user: root
  pip:
    name: setuptools
    state: latest
    executable: pip3
    extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
    umask: "0022"
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"

- name: Copy restapi files
  become: true
  become_user: root
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  loop:
  - {src: "deploy.sh", dest: "/tmp/deploy.sh", mode: "777"}


- name: Create directories for log and application
  become: true
  become_user: root
  file:
    path: "{{ item.path }}"

    state: directory
    mode: "{{ item.mode }}"
  loop:
  - { path: "/var/log/app", mode: "0740" }
  - { path: "{{ app_directory }}", mode: "0740" }

- name: Copy restapi aplication to /pot/api
  become: true
  become_user: root
  copy:
    src: ../../../../app/
    dest: "{{ app_directory }}"
    mode: 664

- name: Copy .env file into {{ app_directory }}.
  become: true
  become_user: root
  template:
    src: env.j2
    dest: "{{ app_directory }}/.env"
    mode: 0740

- name: Copy docker-compose file into {{ app_directory }}.
  become: true
  become_user: root
  template:
    src: docker-compose.j2
    dest: "{{ app_directory }}/docker-compose.yml"
    mode: 0740    

# run scipt deploy
- name: run scrip to deploy app
  become: true
  become_user: root
  command: "sudo bash /tmp/deploy.sh &>>/var/log/app/app.log" 
  register: deploy_result
  changed_when: false
  failed_when:
    - deploy_result.rc != 0

...
