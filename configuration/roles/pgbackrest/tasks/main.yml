---
# yamllint disable rule:line-length

- block:
    - name: Make sure the gnupg and apt-transport-https packages are present
      apt:
        pkg:
          - gnupg
          - apt-transport-https
        state: present

    - name: Make sure pgdg apt key is installed
      apt_key:
        id: ACCC4CF8
        url: https://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc

    - name: Make sure pgdg repository is installed
      apt_repository:
        repo: "deb https://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main"

    - name: Update apt cache
      apt:
        update_cache: true

    - name: Install pgbackrest
      package:
        name: pgbackrest
        state: latest
  environment: "{{ proxy_env | default({}) }}"

- block: #config pgbackrest on postgres_cluster
  - name: "Generate conf file {{ pgbackrest_conf_file }} on postgresql servers"
    template:
      src: pgbackrest.conf.j2
      dest: "{{ pgbackrest_conf_file }}"
      owner: "postgres"
      group: "postgres"
      mode: 0644

  - name: Ensure config directory on postgres server
    file:
      path: "{{ pgbackrest_conf_dir }}"
      state: directory
      owner: "postgres"
      group: "postgres"
  when: "'postgres_cluster' in group_names"

- block: #config pgbackrest on pgbackrest server
  - name: Ensure the "{{ pgbackrest_repo_user }}" user exist on pgbackrest server
    user:
      name: "{{ pgbackrest_repo_user }}"
      create_home: yes
      shell: /bin/bash
      home: "{{ pgbackrest_home_dir }}"
      state: present

  - name: Ensure config directory exist on pgbackrest server
    file:
      path: "{{ pgbackrest_conf_dir }}"
      state: directory
      owner: "{{ pgbackrest_repo_user }}"
      group: "{{ pgbackrest_repo_user }}"

  - name: "Generate conf file {{ pgbackrest_conf_file }} on pgbackrest repository"
    template:
      src: pgbackrest_host.conf.j2
      dest: "{{ pgbackrest_conf_file }}"
      owner: "{{ pgbackrest_repo_user }}"
      group: "{{ pgbackrest_repo_user }}"
      mode: 0644

  - name: Ensure backup directory exist
    file:
      path: "{{ pgbackrest_bkp_dir }}"
      state: directory
      owner: "{{ pgbackrest_repo_user }}"
      group: "{{ pgbackrest_repo_user }}"

  - name: Ensure log directory exist
    file:
      path: "{{ pgbackrest_log_dir }}"
      state: directory
      owner: "{{ pgbackrest_repo_user }}"
      group: "{{ pgbackrest_repo_user }}"
  when: "'pgbackrest' in group_names"


# if pgbackrest_repo_type: "posix" and pgbackrest_repo_host is set
- import_tasks: ssh_keys.yml
  when:
    - pgbackrest_repo_type|lower != "s3"
    - pgbackrest_repo_host is defined
    - pgbackrest_repo_host | length > 0

...
