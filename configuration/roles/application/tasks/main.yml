---
# yamllint disable rule:line-length
# yamllint disable rule:comments-indentation

# pip install
- import_tasks: pip.yml

#- name: Add python Repository
#  apt_repository:
#    repo: "ppa:deadsnakes/ppa"
#    state: present

- name: Install aptitude using apt
  apt: 
    name: aptitude
    state: latest
    update_cache: yes 
    force_apt_get: yes

- name: Install required system packages
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3.9']

- name: Install required system packages
  apt: 
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop: ['python3-pip', 'virtualenv', 'python3-setuptools', 'git', 'nginx', 'wget']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Update apt and install docker-ce
  apt: 
    update_cache: yes
    name: docker-ce
    state: latest
  
- name: Install Docker Module for Python
  pip:
    name: docker

- name: Copy restapi requirements.txt file
  copy:
    src: requirements.txt
    dest: /tmp/requirements.txt

- name: Copy deploy script deploy.sh 
  copy:
    src: deploy.sh
    dest: /tmp/deploy.sh
    owner: ubuntu
    group: ubuntu
    mode: 740

- name: Install setuptools
  pip:
    name: setuptools
    state: latest
    executable: pip3
    extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
    umask: "0022"
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"

- name: Install requirements
  pip:
    requirements: /tmp/requirements.txt
    executable: pip3
    extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
    umask: "0022"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ postgresql_bin_dir }}:/usr/local/bin:/usr/bin"

- name: Create log file on directory /var/log/app/
  file:
    path: "/var/log/app"
    owner: ubuntu
    group: ubuntu
    state: directory
    mode: 0740

- name: Copy .env file into /tmp.
  template:
    src: env.j2
    dest: /tmp/.env
    owner: root
    group: root
    mode: 0755

# run command

- name: Configure default pyhton
  command: "sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.9" 
  register: python_result
  changed_when: false
  failed_when:
    - python_result.rc != 0

- name: run scrip to deploy app
  command: "sudo bash /tmp/deploy.sh -c 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 -s apirestfull -p 80 marllius Revolut &>>/var/log/app/app.log" 
  register: deploy_result
  changed_when: false
  failed_when:
    - deploy_result.rc != 0

            

...
