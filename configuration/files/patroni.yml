---

scope: postgres-cluster
name: node3
namespace: /service/

log:
  level: INFO
  traceback_level: ERROR
  format: '%(asctime)s %(levelname)s: %(message)s'
  dateformat: ''
  max_queue_size: 1000
  dir: /var/log/patroni
  file_num: 4
  file_size: 25000000
  loggers:
    patroni.postmaster: WARNING
    urllib3: WARNING

restapi:
  listen: 192.168.122.93:8008
  connect_address: 192.168.122.93:8008

etcd:
  hosts: 192.168.122.194:2379,192.168.122.244:2379

bootstrap:
  method: initdb
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    master_start_timeout: 300
    synchronous_mode: false
    synchronous_mode_strict: false
    synchronous_node_count: 1
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        max_connections: 100
        superuser_reserved_connections: 5
        password_encryption: md5
        max_locks_per_transaction: 64
        max_prepared_transactions: 0
        huge_pages: try
        shared_buffers: 512MB
        work_mem: 8MB
        maintenance_work_mem: 256MB
        effective_cache_size: 1724MB
        checkpoint_timeout: 15min
        checkpoint_completion_target: 0.9
        min_wal_size: 2GB
        max_wal_size: 4GB
        wal_buffers: 32MB
        default_statistics_target: 1000
        seq_page_cost: 1
        random_page_cost: 1.1
        effective_io_concurrency: 200
        synchronous_commit: on
        autovacuum: on
        autovacuum_max_workers: 5
        autovacuum_vacuum_scale_factor: 0.1
        autovacuum_analyze_scale_factor: 0.1
        autovacuum_vacuum_cost_limit: 500
        autovacuum_vacuum_cost_delay: 2
        autovacuum_naptime: 1s
        max_files_per_process: 4096
        archive_mode: on
        archive_timeout: 1800s
        archive_command: pgbackrest --stanza=postgresql-cluster archive-push %p
        wal_level: replica
        wal_keep_size: 2GB
        max_wal_senders: 130
        max_replication_slots: 10
        hot_standby: on
        wal_log_hints: on
        wal_compression: off
        shared_preload_libraries: pg_stat_statements
        pg_stat_statements.max: 10000
        pg_stat_statements.track: all
        pg_stat_statements.track_utility: false
        pg_stat_statements.save: true
        track_io_timing: on
        log_lock_waits: on
        log_temp_files: 0
        track_activities: on
        track_counts: on
        track_functions: all
        log_checkpoints: on
        logging_collector: on
        log_truncate_on_rotation: on
        log_rotation_age: 1h
        log_rotation_size: 1GB
        log_line_prefix: '%t [%p]: user=%u,db=%d,app=%a,client=%h '
        log_filename: 'postgresql-%Y-%m-%d_%H.log'
        log_directory: /var/log/postgresql
        hot_standby_feedback: on
        max_standby_streaming_delay: 30s
        wal_receiver_status_interval: 10s
        idle_in_transaction_session_timeout: 10min
        jit: on

  initdb:  # List options to be passed on to initdb
    - encoding: UTF8
    - locale: en_US.UTF-8
    - data-checksums

  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
    - host replication replication 127.0.0.1/32 md5
    - host all all 0.0.0.0/0 md5


postgresql:
  listen: 192.168.122.93,127.0.0.1:5432
  connect_address: 192.168.122.93:5432
  use_unix_socket: true
  data_dir: /pg/13/data
  bin_dir: /usr/lib/postgresql/13/bin
  config_dir: /etc/postgresql/13/main
  pgpass: /home/postgres/.pgpass_patroni
  authentication:
    replication:
      username: replication
      password: replication
    superuser:
      username: postgres
      password: postgres
#    rewind:  # Has no effect on postgres 10 and lower
#      username: rewind_user
#      password: rewind_password
  parameters:
    unix_socket_directories: /var/run/postgresql


  remove_data_directory_on_rewind_failure: false
  remove_data_directory_on_diverged_timelines: false

# if want to run some script on this actions
#  callbacks:
#    on_start:
#    on_stop:
#    on_restart:
#    on_reload:
#    on_role_change:

  create_replica_methods:
    - basebackup
    - pgbackrest
  pgbackrest:
    command: /usr/bin/pgbackrest --stanza=postgresql-cluster --delta restore
    keep_data: True
    no_params: True
  basebackup:
    max-rate: '100M'
    checkpoint: 'fast'


watchdog:
  mode: off  # Allowed values: off, automatic, required
  device: /dev/watchdog
  safety_margin: 5

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false

  # specify a node to replicate from (cascading replication)
#  replicatefrom: (node name)

